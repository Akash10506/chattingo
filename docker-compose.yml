services:
  mysql:
    image: mysql:8.0
    container_name: chattingo-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: chattingo_db
      MYSQL_USER: chatuser
      MYSQL_PASSWORD: chatpassword
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - chattingo-network
    # ADDED HEALTHCHECK TO RESOLVE RACE CONDITION
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "chatuser", "--password=chatpassword"]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chattingo-backend
    restart: unless-stopped
    # WAITS FOR MYSQL TO BE HEALTHY BEFORE STARTING
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/chattingo_db?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: chatuser
      SPRING_DATASOURCE_PASSWORD: chatpassword
      JWT_SECRET: 0ce2ee60a5038f1b2ed4526c49025ce2e4a4e0c2ddd8699e96a25ab7fe866261
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://147.79.70.216:3000
    ports:
      - '8081:8080'
    networks:
      - chattingo-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/actuator/health']
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chattingo-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - '3000:80'
    networks:
      - chattingo-network
    environment:
      REACT_APP_API_BASE_URL: http://147.79.70.216:8081

volumes:
  mysql_data:

networks:
  chattingo-network:
    driver: bridge
